# =============================================================================
# Sentiment-Microstructure ABM Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# See config/README.md for detailed documentation

# =============================================================================
# Kafka Configuration
# =============================================================================
# REQUIRED: Comma-separated list of Kafka broker addresses
# Example: localhost:9092 or broker1:9092,broker2:9092,broker3:9092
KAFKA_BOOTSTRAP_SERVERS=localhost:9092

# Kafka topic names (optional, defaults shown)
KAFKA_TOPIC_ORDERBOOKS=order-books
KAFKA_TOPIC_REDDIT=reddit-posts
KAFKA_TOPIC_SENTIMENT=sentiment-ticks

# Kafka compression (gzip, snappy, lz4, zstd, none)
KAFKA_COMPRESSION_TYPE=gzip

# =============================================================================
# Reddit API Configuration
# =============================================================================
# REQUIRED: Get credentials from https://www.reddit.com/prefs/apps
# 1. Go to https://www.reddit.com/prefs/apps
# 2. Click "create another app" at the bottom
# 3. Select "script" as the app type
# 4. Use http://localhost:8080 as redirect URI
REDDIT_CLIENT_ID=your_client_id_here
REDDIT_CLIENT_SECRET=your_client_secret_here

# User agent string (identify your bot)
REDDIT_USER_AGENT=SentimentMicrostructureABM/1.0

# Comma-separated list of subreddits to monitor
REDDIT_SUBREDDITS=CryptoCurrency,Bitcoin,ethereum,CryptoMarkets,bitcoinmarkets,ethtrader,CryptoTechnology

# =============================================================================
# Binance WebSocket Configuration
# =============================================================================
# WebSocket base URL (usually no need to change)
BINANCE_WEBSOCKET_URL=wss://stream.binance.com:9443/ws

# Comma-separated list of trading pairs to stream
BINANCE_SYMBOLS=btcusdt

# Order book update frequency (100ms or 1000ms)
# 100ms = high frequency (10 updates/sec)
# 1000ms = normal frequency (1 update/sec)
BINANCE_DEPTH_UPDATE_SPEED=100ms

# Number of price levels to capture (5, 10, or 20)
BINANCE_DEPTH_LEVELS=20

# =============================================================================
# Sentiment Analysis Configuration
# =============================================================================
# HuggingFace model identifier
SENTIMENT_MODEL_NAME=distilroberta-base

# Path to fine-tuned model (optional, leave empty to use pretrained)
SENTIMENT_MODEL_PATH=

# Directory for model cache
SENTIMENT_MODEL_CACHE=models/cache

# Inference batch size (higher = faster but more memory)
SENTIMENT_BATCH_SIZE=8

# Monte Carlo dropout samples for uncertainty quantification
# Higher values = better uncertainty estimates but slower
# Recommended: 20-50 for research, 10-20 for production
SENTIMENT_MC_SAMPLES=20

# EWMA smoothing factor (0-1, higher = more responsive to changes)
SENTIMENT_EWMA_ALPHA=0.3

# PyTorch device (cuda, cpu, mps, or leave empty for auto-detect)
SENTIMENT_DEVICE=

# =============================================================================
# TimescaleDB Configuration
# =============================================================================
TIMESCALE_HOST=localhost
TIMESCALE_PORT=5432
TIMESCALE_DB=market_sim
TIMESCALE_USER=postgres
TIMESCALE_PASSWORD=postgres

# =============================================================================
# Simulation Parameters
# =============================================================================
# Tick interval in milliseconds (lower = higher frequency simulation)
SIM_TICK_INTERVAL_MS=500

# Agent counts for each type
SIM_N_MARKET_MAKERS=10
SIM_N_INFORMED_TRADERS=20
SIM_N_NOISE_TRADERS=50
SIM_N_ARBITRAGEURS=5

# =============================================================================
# Dynamic Factor Model (DFM) Parameters
# =============================================================================
# Rolling window size for factor estimation (in minutes)
DFM_WINDOW_SIZE_MINUTES=60

# How often to update factor model (in minutes)
DFM_UPDATE_INTERVAL_MINUTES=5

# Number of latent factors to extract
DFM_N_FACTORS=3

# =============================================================================
# Dashboard Configuration
# =============================================================================
# Dashboard server host (0.0.0.0 = all interfaces, 127.0.0.1 = localhost only)
DASH_HOST=0.0.0.0

# Dashboard server port
DASH_PORT=8050

# Enable debug mode (shows detailed error pages)
DASH_DEBUG=false

# =============================================================================
# Logging Configuration
# =============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (leave empty for stdout only)
LOG_FILE=logs/market_sim.log

# Log message format (Python logging format string)
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
